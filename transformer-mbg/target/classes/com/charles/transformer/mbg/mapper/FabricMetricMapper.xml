<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.charles.transformer.mbg.mapper.FabricMetricMapper">
  <resultMap id="BaseResultMap" type="com.charles.transformer.mbg.model.FabricMetric">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="total_tx" jdbcType="BIGINT" property="total_tx" />
    <result column="latency" jdbcType="BIGINT" property="latency" />
    <result column="tps" jdbcType="BIGINT" property="tps" />
    <result column="iops" jdbcType="BIGINT" property="iops" />
    <result column="avg_latency" jdbcType="BIGINT" property="avg_latency" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, total_tx, latency, tps, iops, avg_latency
  </sql>
  <select id="selectByExample" parameterType="com.charles.transformer.mbg.model.FabricMetricExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fabric_metric
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fabric_metric
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from fabric_metric
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.charles.transformer.mbg.model.FabricMetricExample">
    delete from fabric_metric
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.charles.transformer.mbg.model.FabricMetric">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fabric_metric (total_tx, latency, tps, 
      iops, avg_latency)
    values (#{total_tx,jdbcType=BIGINT}, #{latency,jdbcType=BIGINT}, #{tps,jdbcType=BIGINT}, 
      #{iops,jdbcType=BIGINT}, #{avg_latency,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.charles.transformer.mbg.model.FabricMetric">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fabric_metric
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="total_tx != null">
        total_tx,
      </if>
      <if test="latency != null">
        latency,
      </if>
      <if test="tps != null">
        tps,
      </if>
      <if test="iops != null">
        iops,
      </if>
      <if test="avg_latency != null">
        avg_latency,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="total_tx != null">
        #{total_tx,jdbcType=BIGINT},
      </if>
      <if test="latency != null">
        #{latency,jdbcType=BIGINT},
      </if>
      <if test="tps != null">
        #{tps,jdbcType=BIGINT},
      </if>
      <if test="iops != null">
        #{iops,jdbcType=BIGINT},
      </if>
      <if test="avg_latency != null">
        #{avg_latency,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.charles.transformer.mbg.model.FabricMetricExample" resultType="java.lang.Long">
    select count(*) from fabric_metric
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fabric_metric
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.total_tx != null">
        total_tx = #{row.total_tx,jdbcType=BIGINT},
      </if>
      <if test="row.latency != null">
        latency = #{row.latency,jdbcType=BIGINT},
      </if>
      <if test="row.tps != null">
        tps = #{row.tps,jdbcType=BIGINT},
      </if>
      <if test="row.iops != null">
        iops = #{row.iops,jdbcType=BIGINT},
      </if>
      <if test="row.avg_latency != null">
        avg_latency = #{row.avg_latency,jdbcType=BIGINT},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fabric_metric
    set id = #{row.id,jdbcType=BIGINT},
      total_tx = #{row.total_tx,jdbcType=BIGINT},
      latency = #{row.latency,jdbcType=BIGINT},
      tps = #{row.tps,jdbcType=BIGINT},
      iops = #{row.iops,jdbcType=BIGINT},
      avg_latency = #{row.avg_latency,jdbcType=BIGINT}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.charles.transformer.mbg.model.FabricMetric">
    update fabric_metric
    <set>
      <if test="total_tx != null">
        total_tx = #{total_tx,jdbcType=BIGINT},
      </if>
      <if test="latency != null">
        latency = #{latency,jdbcType=BIGINT},
      </if>
      <if test="tps != null">
        tps = #{tps,jdbcType=BIGINT},
      </if>
      <if test="iops != null">
        iops = #{iops,jdbcType=BIGINT},
      </if>
      <if test="avg_latency != null">
        avg_latency = #{avg_latency,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.charles.transformer.mbg.model.FabricMetric">
    update fabric_metric
    set total_tx = #{total_tx,jdbcType=BIGINT},
      latency = #{latency,jdbcType=BIGINT},
      tps = #{tps,jdbcType=BIGINT},
      iops = #{iops,jdbcType=BIGINT},
      avg_latency = #{avg_latency,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>